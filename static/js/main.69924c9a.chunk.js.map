{"version":3,"sources":["posts.js","comments.js","CustomLoginPage.js","FIREBASE_CONFIG.js","App.js","registerServiceWorker.js","index.js"],"names":["PostFilter","props","Filter","TextInput","label","source","alwaysOn","PostList","List","filters","Datagrid","TextField","RichTextField","ShowButton","EditButton","DeleteButton","redirect","PostShow","Show","SimpleShowLayout","ReferenceField","reference","FileField","title","PostCreate","Create","SimpleForm","ReferenceInput","SelectInput","optionText","FileInput","accept","PostEdit","Edit","options","disabled","choices","id","name","CommentList","CommentShow","DateField","CommentCreate","CommentEdit","DateInput","CustomLoginForm","style","fontFamily","marginLeft","LoginForm","CustomLoginPage","Login","loginForm","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","logging","rootRef","dataProvider","FirebaseDataProvider","config","authProvider","FirebaseAuthProvider","App","Admin","loginPage","Resource","list","show","create","edit","icon","CommentIcon","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69924c9a.chunk.js","sourcesContent":["// in src/posts.js\r\nimport * as React from \"react\";\r\n// tslint:disable-next-line:no-var-requires\r\nimport {\r\n  Datagrid,\r\n  List,\r\n  Show,\r\n  Create,\r\n  Edit,\r\n  Filter,\r\n  SimpleShowLayout,\r\n  SimpleForm,\r\n  ReferenceField,\r\n  ReferenceInput,\r\n  TextField,\r\n  TextInput,\r\n  ShowButton,\r\n  EditButton,\r\n  DeleteButton,\r\n  RichTextField,\r\n  SelectInput,\r\n  FileField,\r\n  FileInput\r\n} from \"react-admin\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nconst PostFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"title\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const PostList = (props) => (\r\n  <List {...props} filters={<PostFilter />}>\r\n    <Datagrid>\r\n      <TextField source=\"title\" />\r\n      <RichTextField source=\"body\" />\r\n      <TextField source=\"createdate\" />\r\n      <TextField source=\"lastupdate\" />\r\n      <ShowButton label=\"\" />\r\n      <EditButton label=\"\" />\r\n      <DeleteButton label=\"\" redirect={false}/>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const PostShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n      <ReferenceField label=\"Comment\" source=\"title\" reference=\"comments\">\r\n        <TextField source=\"title\" />\r\n      </ReferenceField>\r\n      <TextField source=\"createdate\" />\r\n      <TextField source=\"lastupdate\" />\r\n      <RichTextField source=\"body\" />\r\n      <FileField source=\"file.src\" title=\"file.title\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n\r\nexport const PostCreate = (props) => (\r\n  <Create {...props} >\r\n    <SimpleForm>\r\n      <TextInput source=\"title\" />\r\n      <RichTextInput source=\"body\" />\r\n      <ReferenceInput label=\"Comment\" source=\"title\" reference=\"comments\">\r\n        <SelectInput optionText=\"title\" />\r\n      </ReferenceInput>\r\n      <FileInput source=\"file\" label=\"File\" accept=\"application/pdf\">\r\n        <FileField source=\"src\" title=\"title\" />\r\n      </FileInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const PostEdit = (props) => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <ReferenceInput source=\"id\" options={{ disabled: true }} />\r\n      <ReferenceInput source=\"createdate\" options={{ disabled: true }} />\r\n      <ReferenceInput source=\"lastupdate\" options={{ disabled: true }} />\r\n      <ReferenceInput label=\"Comment\" source=\"title\" reference=\"comments\">\r\n        <SelectInput optionText=\"title\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"title\" />\r\n      <RichTextInput source=\"body\" />\r\n      <SelectInput source=\"rating\" choices={[\r\n        { id: 1, name: 'Good' },\r\n        { id: 2, name: 'Okay' },\r\n        { id: 3, name: 'Bad' },\r\n      ]} />\r\n      <FileInput source=\"file\" label=\"File\" accept=\"application/pdf\">\r\n        <FileField source=\"src\" title=\"title\" />\r\n      </FileInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","// in src/Comments.js\r\nimport * as React from \"react\";\r\n// tslint:disable-next-line:no-var-requires\r\nimport {\r\n  Datagrid,\r\n  List,\r\n  Show,\r\n  Create,\r\n  Edit,\r\n  DateInput,\r\n  DateField,\r\n  SimpleShowLayout,\r\n  SimpleForm,\r\n  TextField,\r\n  TextInput,\r\n  ShowButton,\r\n  EditButton,\r\n  DeleteButton,\r\n  RichTextField,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nexport const CommentList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source=\"title\" />\r\n      <RichTextField source=\"body\" />\r\n      <ShowButton label=\"\" />\r\n      <EditButton label=\"\" />\r\n      <DeleteButton label=\"\" redirect={false}/>\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const CommentShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n      <RichTextField source=\"body\" />\r\n      <DateField source=\"createdate\" options={{ disabled: true }} />\r\n      <DateField source=\"lastupdate\" options={{ disabled: true }} />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n\r\nexport const CommentCreate = (props) => (\r\n  <Create {...props} >\r\n    <SimpleForm>\r\n      <TextInput source=\"title\" />\r\n      <RichTextInput source=\"body\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const CommentEdit = (props) => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" options={{ disabled: true }} />\r\n      <DateInput source=\"createdate\" options={{ disabled: true }} />\r\n      <DateInput source=\"lastupdate\" options={{ disabled: true }} />\r\n      <TextInput source=\"title\" />\r\n      <RichTextInput source=\"body\" />\r\n      <SelectInput source=\"rating\" choices={[\r\n        { id: 1, name: 'Good' },\r\n        { id: 2, name: 'Okay' },\r\n        { id: 3, name: 'Bad' },\r\n      ]} />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","// LoginPage.js\r\nimport React from \"react\";\r\nimport { Login, LoginForm } from \"react-admin\";\r\n\r\nconst CustomLoginForm = props => (\r\n  <div>\r\n    <div style={{fontFamily: \"monospace\", marginLeft: '15px'}}>\r\n      <p>Username: test@example.com</p>\r\n      <p>Password: password</p>\r\n    </div>\r\n    <LoginForm {...props} />\r\n  </div>\r\n);\r\n\r\nconst CustomLoginPage = props => (\r\n  <Login loginForm={<CustomLoginForm />} {...props} />\r\n);\r\n\r\nexport default CustomLoginPage;\r\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyCtYn3fjF-z6OOmxncXl8g3fr95u1chCTo\",\n  authDomain: \"react-admin-firebase-1.firebaseapp.com\",\n  databaseURL: \"https://react-admin-firebase-1.firebaseio.com\",\n  projectId: \"react-admin-firebase-1\",\n  storageBucket: \"react-admin-firebase-1.appspot.com\",\n  messagingSenderId: \"14660317743\",\n  appId: \"1:14660317743:web:e4b09f3cdabbfcec\"\n};\n","import * as React from \"react\";\r\nimport { PostList, PostShow, PostCreate, PostEdit } from \"./posts\";\r\nimport { CommentList, CommentShow, CommentCreate, CommentEdit } from \"./comments\";\r\nimport { Admin, Resource } from \"react-admin\";\r\nimport {\r\n  FirebaseDataProvider,\r\n  FirebaseAuthProvider\r\n} from \"react-admin-firebase\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport CustomLoginPage from './CustomLoginPage';\r\n\r\nimport { firebaseConfig as config } from './FIREBASE_CONFIG';\r\n\r\nconst options = {\r\n  logging: true,\r\n  rootRef: 'root_collection/some_document'\r\n}\r\nconst dataProvider = FirebaseDataProvider(config, options);\r\nconst authProvider = FirebaseAuthProvider(config, options);\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Admin\r\n        loginPage={CustomLoginPage} \r\n        dataProvider={dataProvider}\r\n        authProvider={authProvider}\r\n      >\r\n        <Resource\r\n          name=\"posts\"\r\n          list={PostList}\r\n          show={PostShow}\r\n          create={PostCreate}\r\n          edit={PostEdit}\r\n        />\r\n        <Resource\r\n          name=\"comments\"\r\n          icon={CommentIcon}\r\n          list={CommentList}\r\n          show={CommentShow}\r\n          create={CommentCreate}\r\n          edit={CommentEdit}\r\n        />\r\n      </Admin>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}